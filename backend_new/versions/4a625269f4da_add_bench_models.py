"""add bench models

Revision ID: 4a625269f4da
Revises: 7e5fd7b669fa
Create Date: 2025-09-09 01:20:58.958005

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4a625269f4da'
down_revision = '7e5fd7b669fa'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate_bench',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('profile_manager_id', sa.Integer(), nullable=True),
    sa.Column('current_title', sa.String(length=200), nullable=False),
    sa.Column('experience_years', sa.Integer(), nullable=False),
    sa.Column('current_salary', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('expected_salary', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('salary_currency', sa.String(length=3), nullable=False),
    sa.Column('current_location', sa.String(length=200), nullable=False),
    sa.Column('willing_to_relocate', sa.Boolean(), nullable=False),
    sa.Column('preferred_locations', sa.JSON(), nullable=True),
    sa.Column('remote_work_preference', sa.String(length=50), nullable=False),
    sa.Column('availability_status', sa.String(length=50), nullable=False),
    sa.Column('available_from', sa.DateTime(), nullable=True),
    sa.Column('notice_period_days', sa.Integer(), nullable=False),
    sa.Column('bench_status', sa.String(length=50), nullable=False),
    sa.Column('bench_start_date', sa.DateTime(), nullable=False),
    sa.Column('bench_end_date', sa.DateTime(), nullable=True),
    sa.Column('work_authorization', sa.String(length=100), nullable=False),
    sa.Column('visa_status', sa.String(length=100), nullable=True),
    sa.Column('visa_expiry', sa.DateTime(), nullable=True),
    sa.Column('highest_education', sa.String(length=100), nullable=True),
    sa.Column('education_field', sa.String(length=200), nullable=True),
    sa.Column('university', sa.String(length=200), nullable=True),
    sa.Column('graduation_year', sa.Integer(), nullable=True),
    sa.Column('professional_summary', sa.Text(), nullable=True),
    sa.Column('key_achievements', sa.JSON(), nullable=True),
    sa.Column('resume_url', sa.String(length=500), nullable=True),
    sa.Column('portfolio_url', sa.String(length=500), nullable=True),
    sa.Column('linkedin_url', sa.String(length=500), nullable=True),
    sa.Column('github_url', sa.String(length=500), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('markup_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('client_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('interview_success_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('placement_success_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('client_satisfaction_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('marketing_approved', sa.Boolean(), nullable=False),
    sa.Column('marketing_notes', sa.Text(), nullable=True),
    sa.Column('unique_selling_points', sa.JSON(), nullable=True),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('areas_for_improvement', sa.JSON(), nullable=True),
    sa.Column('preferred_contact_method', sa.String(length=50), nullable=False),
    sa.Column('best_time_to_contact', sa.String(length=100), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['profile_manager_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_candidate_bench_id'), 'candidate_bench', ['id'], unique=False)
    op.create_index(op.f('ix_candidate_bench_profile_manager_id'), 'candidate_bench', ['profile_manager_id'], unique=False)
    op.create_index(op.f('ix_candidate_bench_tenant_id'), 'candidate_bench', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_candidate_bench_user_id'), 'candidate_bench', ['user_id'], unique=False)
    op.create_table('certifications',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('issuing_organization', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('requires_renewal', sa.Boolean(), nullable=False),
    sa.Column('validity_period_months', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('verification_url', sa.String(length=500), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_certifications_id'), 'certifications', ['id'], unique=False)
    op.create_index(op.f('ix_certifications_name'), 'certifications', ['name'], unique=False)
    op.create_table('clients',
    sa.Column('company_name', sa.String(length=200), nullable=False),
    sa.Column('legal_name', sa.String(length=200), nullable=True),
    sa.Column('dba_name', sa.String(length=200), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('company_size', sa.String(length=50), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('primary_email', sa.String(length=255), nullable=True),
    sa.Column('primary_phone', sa.String(length=20), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('linkedin_url', sa.String(length=500), nullable=True),
    sa.Column('headquarters_address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('duns_number', sa.String(length=20), nullable=True),
    sa.Column('client_type', sa.String(length=50), nullable=False),
    sa.Column('client_status', sa.String(length=50), nullable=False),
    sa.Column('account_manager_id', sa.Integer(), nullable=True),
    sa.Column('sales_rep_id', sa.Integer(), nullable=True),
    sa.Column('payment_terms', sa.String(length=50), nullable=False),
    sa.Column('credit_limit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('markup_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('total_placements', sa.Integer(), nullable=False),
    sa.Column('total_revenue', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('average_placement_duration', sa.Integer(), nullable=True),
    sa.Column('payment_rating', sa.Integer(), nullable=True),
    sa.Column('communication_rating', sa.Integer(), nullable=True),
    sa.Column('overall_rating', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('preferred_skills', sa.JSON(), nullable=True),
    sa.Column('preferred_locations', sa.JSON(), nullable=True),
    sa.Column('budget_range_min', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_range_max', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('msa_signed', sa.Boolean(), nullable=False),
    sa.Column('msa_expiry_date', sa.DateTime(), nullable=True),
    sa.Column('w9_received', sa.Boolean(), nullable=False),
    sa.Column('insurance_verified', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('challenges', sa.JSON(), nullable=True),
    sa.Column('lead_source', sa.String(length=100), nullable=True),
    sa.Column('first_contact_date', sa.DateTime(), nullable=True),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.Column('background_check_required', sa.Boolean(), nullable=False),
    sa.Column('drug_test_required', sa.Boolean(), nullable=False),
    sa.Column('security_clearance_required', sa.Boolean(), nullable=False),
    sa.Column('annual_revenue', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('employee_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_manager_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sales_rep_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_account_manager_id'), 'clients', ['account_manager_id'], unique=False)
    op.create_index(op.f('ix_clients_company_name'), 'clients', ['company_name'], unique=False)
    op.create_index(op.f('ix_clients_id'), 'clients', ['id'], unique=False)
    op.create_index(op.f('ix_clients_sales_rep_id'), 'clients', ['sales_rep_id'], unique=False)
    op.create_index(op.f('ix_clients_tenant_id'), 'clients', ['tenant_id'], unique=False)
    op.create_table('tenants',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_domain'), 'tenants', ['domain'], unique=True)
    op.create_index(op.f('ix_tenants_id'), 'tenants', ['id'], unique=False)
    op.create_index(op.f('ix_tenants_name'), 'tenants', ['name'], unique=True)
    op.create_table('candidate_bench_skills',
    sa.Column('candidate_bench_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('skill_level', sa.String(length=20), nullable=False),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_bench_id'], ['candidate_bench.id'], ),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.PrimaryKeyConstraint('candidate_bench_id', 'skill_id')
    )
    op.create_table('candidate_certifications',
    sa.Column('candidate_bench_id', sa.Integer(), nullable=False),
    sa.Column('certification_id', sa.Integer(), nullable=False),
    sa.Column('obtained_date', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_bench_id'], ['candidate_bench.id'], ),
    sa.ForeignKeyConstraint(['certification_id'], ['certifications.id'], ),
    sa.PrimaryKeyConstraint('candidate_bench_id', 'certification_id')
    )
    op.create_table('client_contacts',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('is_primary_contact', sa.Boolean(), nullable=False),
    sa.Column('is_decision_maker', sa.Boolean(), nullable=False),
    sa.Column('can_approve_hires', sa.Boolean(), nullable=False),
    sa.Column('preferred_contact_method', sa.String(length=50), nullable=False),
    sa.Column('best_time_to_contact', sa.String(length=100), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('last_contact_date', sa.DateTime(), nullable=True),
    sa.Column('next_follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_contacts_client_id'), 'client_contacts', ['client_id'], unique=False)
    op.create_index(op.f('ix_client_contacts_email'), 'client_contacts', ['email'], unique=False)
    op.create_index(op.f('ix_client_contacts_id'), 'client_contacts', ['id'], unique=False)
    op.create_index(op.f('ix_client_contacts_tenant_id'), 'client_contacts', ['tenant_id'], unique=False)
    op.create_table('job_opportunities',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('client_contact_id', sa.Integer(), nullable=True),
    sa.Column('assigned_recruiter_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('remote_allowed', sa.Boolean(), nullable=False),
    sa.Column('travel_required', sa.String(length=50), nullable=True),
    sa.Column('employment_type', sa.String(length=50), nullable=False),
    sa.Column('duration_months', sa.Integer(), nullable=True),
    sa.Column('hours_per_week', sa.Integer(), nullable=False),
    sa.Column('budget_min', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_max', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('rate_type', sa.String(length=20), nullable=False),
    sa.Column('experience_years_min', sa.Integer(), nullable=True),
    sa.Column('experience_years_max', sa.Integer(), nullable=True),
    sa.Column('education_required', sa.String(length=100), nullable=True),
    sa.Column('required_skills', sa.JSON(), nullable=True),
    sa.Column('preferred_skills', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('max_submissions', sa.Integer(), nullable=False),
    sa.Column('current_submissions', sa.Integer(), nullable=False),
    sa.Column('internal_notes', sa.Text(), nullable=True),
    sa.Column('client_urgency', sa.String(length=20), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('applications_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_recruiter_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['client_contact_id'], ['client_contacts.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_opportunities_assigned_recruiter_id'), 'job_opportunities', ['assigned_recruiter_id'], unique=False)
    op.create_index(op.f('ix_job_opportunities_client_contact_id'), 'job_opportunities', ['client_contact_id'], unique=False)
    op.create_index(op.f('ix_job_opportunities_client_id'), 'job_opportunities', ['client_id'], unique=False)
    op.create_index(op.f('ix_job_opportunities_id'), 'job_opportunities', ['id'], unique=False)
    op.create_index(op.f('ix_job_opportunities_tenant_id'), 'job_opportunities', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_job_opportunities_title'), 'job_opportunities', ['title'], unique=False)
    op.create_table('candidate_submissions',
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('job_opportunity_id', sa.Integer(), nullable=True),
    sa.Column('submitted_by', sa.Integer(), nullable=False),
    sa.Column('submission_date', sa.DateTime(), nullable=False),
    sa.Column('position_title', sa.String(length=200), nullable=False),
    sa.Column('client_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('duration_months', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('status_updated_at', sa.DateTime(), nullable=False),
    sa.Column('client_feedback', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.String(length=200), nullable=True),
    sa.Column('interview_scheduled', sa.Boolean(), nullable=False),
    sa.Column('interview_date', sa.DateTime(), nullable=True),
    sa.Column('interview_feedback', sa.Text(), nullable=True),
    sa.Column('submission_notes', sa.Text(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_bench.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_opportunity_id'], ['job_opportunities.id'], ),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_candidate_submissions_candidate_id'), 'candidate_submissions', ['candidate_id'], unique=False)
    op.create_index(op.f('ix_candidate_submissions_client_id'), 'candidate_submissions', ['client_id'], unique=False)
    op.create_index(op.f('ix_candidate_submissions_id'), 'candidate_submissions', ['id'], unique=False)
    op.create_index(op.f('ix_candidate_submissions_job_opportunity_id'), 'candidate_submissions', ['job_opportunity_id'], unique=False)
    op.create_index(op.f('ix_candidate_submissions_submitted_by'), 'candidate_submissions', ['submitted_by'], unique=False)
    op.create_table('candidate_interviews',
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('interview_date', sa.DateTime(), nullable=False),
    sa.Column('interview_type', sa.String(length=50), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('interviewer_name', sa.String(length=200), nullable=True),
    sa.Column('interviewer_title', sa.String(length=200), nullable=True),
    sa.Column('interviewer_email', sa.String(length=255), nullable=True),
    sa.Column('overall_rating', sa.Integer(), nullable=True),
    sa.Column('technical_rating', sa.Integer(), nullable=True),
    sa.Column('communication_rating', sa.Integer(), nullable=True),
    sa.Column('cultural_fit_rating', sa.Integer(), nullable=True),
    sa.Column('strengths', sa.JSON(), nullable=True),
    sa.Column('weaknesses', sa.JSON(), nullable=True),
    sa.Column('detailed_feedback', sa.Text(), nullable=True),
    sa.Column('recommendation', sa.String(length=50), nullable=True),
    sa.Column('next_steps', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_bench.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['candidate_submissions.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_candidate_interviews_candidate_id'), 'candidate_interviews', ['candidate_id'], unique=False)
    op.create_index(op.f('ix_candidate_interviews_client_id'), 'candidate_interviews', ['client_id'], unique=False)
    op.create_index(op.f('ix_candidate_interviews_id'), 'candidate_interviews', ['id'], unique=False)
    op.create_index(op.f('ix_candidate_interviews_submission_id'), 'candidate_interviews', ['submission_id'], unique=False)
    op.create_table('candidate_sales',
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('sales_person_id', sa.Integer(), nullable=False),
    sa.Column('sale_date', sa.DateTime(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('markup_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('gross_margin', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('contract_type', sa.String(length=50), nullable=False),
    sa.Column('duration_months', sa.Integer(), nullable=True),
    sa.Column('hours_per_week', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('client_satisfaction_score', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('renewal_probability', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('total_revenue', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('commission_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('commission_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('metadata_json', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate_bench.id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sales_person_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['candidate_submissions.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_candidate_sales_candidate_id'), 'candidate_sales', ['candidate_id'], unique=False)
    op.create_index(op.f('ix_candidate_sales_client_id'), 'candidate_sales', ['client_id'], unique=False)
    op.create_index(op.f('ix_candidate_sales_id'), 'candidate_sales', ['id'], unique=False)
    op.create_index(op.f('ix_candidate_sales_sales_person_id'), 'candidate_sales', ['sales_person_id'], unique=False)
    op.create_index(op.f('ix_candidate_sales_submission_id'), 'candidate_sales', ['submission_id'], unique=False)
    with op.batch_alter_table('application_feedback') as batch_op:
        batch_op.create_foreign_key('fk_application_feedback_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_application_feedback_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('application_notes') as batch_op:
        batch_op.create_foreign_key('fk_application_notes_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_application_notes_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('applications') as batch_op:
        batch_op.create_foreign_key('fk_applications_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_applications_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('assessments') as batch_op:
        batch_op.create_foreign_key('fk_assessments_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_assessments_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('bulk_communications') as batch_op:
        batch_op.create_foreign_key('fk_bulk_communications_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_bulk_communications_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('bulk_uploads') as batch_op:
        batch_op.create_foreign_key('fk_bulk_uploads_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_bulk_uploads_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('call_logs') as batch_op:
        batch_op.create_foreign_key('fk_call_logs_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_call_logs_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('candidate_analytics') as batch_op:
        batch_op.create_foreign_key('fk_candidate_analytics_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_candidate_analytics_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('communication_preferences') as batch_op:
        batch_op.create_foreign_key('fk_communication_preferences_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_communication_preferences_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('custom_metrics') as batch_op:
        batch_op.create_foreign_key('fk_custom_metrics_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_custom_metrics_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('departments') as batch_op:
        batch_op.create_foreign_key('fk_departments_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_departments_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('diversity_metrics') as batch_op:
        batch_op.create_foreign_key('fk_diversity_metrics_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_diversity_metrics_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('document_comments') as batch_op:
        batch_op.create_foreign_key('fk_document_comments_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_document_comments_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('document_versions') as batch_op:
        batch_op.create_foreign_key('fk_document_versions_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_document_versions_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('documents') as batch_op:
        batch_op.create_foreign_key('fk_documents_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_documents_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('email_templates') as batch_op:
        batch_op.create_foreign_key('fk_email_templates_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_email_templates_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('file_shares') as batch_op:
        batch_op.create_foreign_key('fk_file_shares_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_file_shares_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('file_uploads') as batch_op:
        batch_op.create_foreign_key('fk_file_uploads_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_file_uploads_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('file_versions') as batch_op:
        batch_op.create_foreign_key('fk_file_versions_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_file_versions_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('interview_feedback') as batch_op:
        batch_op.create_foreign_key('fk_interview_feedback_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_interview_feedback_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('interview_notes') as batch_op:
        batch_op.create_foreign_key('fk_interview_notes_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_interview_notes_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('interview_recordings') as batch_op:
        batch_op.create_foreign_key('fk_interview_recordings_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_interview_recordings_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('interview_slots') as batch_op:
        batch_op.create_foreign_key('fk_interview_slots_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_interview_slots_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('interview_templates') as batch_op:
        batch_op.create_foreign_key('fk_interview_templates_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_interview_templates_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('interviews') as batch_op:
        batch_op.create_foreign_key('fk_interviews_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_interviews_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('job_analytics') as batch_op:
        batch_op.create_foreign_key('fk_job_analytics_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_job_analytics_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('job_templates') as batch_op:
        batch_op.create_foreign_key('fk_job_templates_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_job_templates_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('jobs') as batch_op:
        batch_op.create_foreign_key('fk_jobs_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_jobs_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('messages') as batch_op:
        batch_op.create_foreign_key('fk_messages_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_messages_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('notifications') as batch_op:
        batch_op.create_foreign_key('fk_notifications_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_notifications_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('permissions') as batch_op:
        batch_op.create_foreign_key('fk_permissions_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_permissions_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('pipeline_analytics') as batch_op:
        batch_op.create_foreign_key('fk_pipeline_analytics_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_pipeline_analytics_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('recruiter_performance') as batch_op:
        batch_op.create_foreign_key('fk_recruiter_performance_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_recruiter_performance_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('recruitment_metrics') as batch_op:
        batch_op.create_foreign_key('fk_recruitment_metrics_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_recruitment_metrics_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('reports') as batch_op:
        batch_op.create_foreign_key('fk_reports_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_reports_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('roles') as batch_op:
        batch_op.create_foreign_key('fk_roles_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_roles_updated_by_users', 'users', ['updated_by'], ['id'])
    with op.batch_alter_table('skills') as batch_op:
        batch_op.create_foreign_key('fk_skills_updated_by_users', 'users', ['updated_by'], ['id'])
        batch_op.create_foreign_key('fk_skills_created_by_users', 'users', ['created_by'], ['id'])
    with op.batch_alter_table('users') as batch_op:
        batch_op.create_foreign_key('fk_users_created_by_users', 'users', ['created_by'], ['id'])
        batch_op.create_foreign_key('fk_users_updated_by_users', 'users', ['updated_by'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'skills', type_='foreignkey')
    op.drop_constraint(None, 'skills', type_='foreignkey')
    op.drop_constraint(None, 'roles', type_='foreignkey')
    op.drop_constraint(None, 'roles', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'reports', type_='foreignkey')
    op.drop_constraint(None, 'recruitment_metrics', type_='foreignkey')
    op.drop_constraint(None, 'recruitment_metrics', type_='foreignkey')
    op.drop_constraint(None, 'recruiter_performance', type_='foreignkey')
    op.drop_constraint(None, 'recruiter_performance', type_='foreignkey')
    op.drop_constraint(None, 'pipeline_analytics', type_='foreignkey')
    op.drop_constraint(None, 'pipeline_analytics', type_='foreignkey')
    op.drop_constraint(None, 'permissions', type_='foreignkey')
    op.drop_constraint(None, 'permissions', type_='foreignkey')
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_constraint(None, 'job_templates', type_='foreignkey')
    op.drop_constraint(None, 'job_templates', type_='foreignkey')
    op.drop_constraint(None, 'job_analytics', type_='foreignkey')
    op.drop_constraint(None, 'job_analytics', type_='foreignkey')
    op.drop_constraint(None, 'interviews', type_='foreignkey')
    op.drop_constraint(None, 'interviews', type_='foreignkey')
    op.drop_constraint(None, 'interview_templates', type_='foreignkey')
    op.drop_constraint(None, 'interview_templates', type_='foreignkey')
    op.drop_constraint(None, 'interview_slots', type_='foreignkey')
    op.drop_constraint(None, 'interview_slots', type_='foreignkey')
    op.drop_constraint(None, 'interview_recordings', type_='foreignkey')
    op.drop_constraint(None, 'interview_recordings', type_='foreignkey')
    op.drop_constraint(None, 'interview_notes', type_='foreignkey')
    op.drop_constraint(None, 'interview_notes', type_='foreignkey')
    op.drop_constraint(None, 'interview_feedback', type_='foreignkey')
    op.drop_constraint(None, 'interview_feedback', type_='foreignkey')
    op.drop_constraint(None, 'file_versions', type_='foreignkey')
    op.drop_constraint(None, 'file_versions', type_='foreignkey')
    op.drop_constraint(None, 'file_uploads', type_='foreignkey')
    op.drop_constraint(None, 'file_uploads', type_='foreignkey')
    op.drop_constraint(None, 'file_shares', type_='foreignkey')
    op.drop_constraint(None, 'file_shares', type_='foreignkey')
    op.drop_constraint(None, 'email_templates', type_='foreignkey')
    op.drop_constraint(None, 'email_templates', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_constraint(None, 'document_versions', type_='foreignkey')
    op.drop_constraint(None, 'document_versions', type_='foreignkey')
    op.drop_constraint(None, 'document_comments', type_='foreignkey')
    op.drop_constraint(None, 'document_comments', type_='foreignkey')
    op.drop_constraint(None, 'diversity_metrics', type_='foreignkey')
    op.drop_constraint(None, 'diversity_metrics', type_='foreignkey')
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.drop_constraint(None, 'departments', type_='foreignkey')
    op.drop_constraint(None, 'custom_metrics', type_='foreignkey')
    op.drop_constraint(None, 'custom_metrics', type_='foreignkey')
    op.drop_constraint(None, 'communication_preferences', type_='foreignkey')
    op.drop_constraint(None, 'communication_preferences', type_='foreignkey')
    op.drop_constraint(None, 'candidate_analytics', type_='foreignkey')
    op.drop_constraint(None, 'candidate_analytics', type_='foreignkey')
    op.drop_constraint(None, 'call_logs', type_='foreignkey')
    op.drop_constraint(None, 'call_logs', type_='foreignkey')
    op.drop_constraint(None, 'bulk_uploads', type_='foreignkey')
    op.drop_constraint(None, 'bulk_uploads', type_='foreignkey')
    op.drop_constraint(None, 'bulk_communications', type_='foreignkey')
    op.drop_constraint(None, 'bulk_communications', type_='foreignkey')
    op.drop_constraint(None, 'assessments', type_='foreignkey')
    op.drop_constraint(None, 'assessments', type_='foreignkey')
    op.drop_constraint(None, 'applications', type_='foreignkey')
    op.drop_constraint(None, 'applications', type_='foreignkey')
    op.drop_constraint(None, 'application_notes', type_='foreignkey')
    op.drop_constraint(None, 'application_notes', type_='foreignkey')
    op.drop_constraint(None, 'application_feedback', type_='foreignkey')
    op.drop_constraint(None, 'application_feedback', type_='foreignkey')
    op.drop_index(op.f('ix_candidate_sales_submission_id'), table_name='candidate_sales')
    op.drop_index(op.f('ix_candidate_sales_sales_person_id'), table_name='candidate_sales')
    op.drop_index(op.f('ix_candidate_sales_id'), table_name='candidate_sales')
    op.drop_index(op.f('ix_candidate_sales_client_id'), table_name='candidate_sales')
    op.drop_index(op.f('ix_candidate_sales_candidate_id'), table_name='candidate_sales')
    op.drop_table('candidate_sales')
    op.drop_index(op.f('ix_candidate_interviews_submission_id'), table_name='candidate_interviews')
    op.drop_index(op.f('ix_candidate_interviews_id'), table_name='candidate_interviews')
    op.drop_index(op.f('ix_candidate_interviews_client_id'), table_name='candidate_interviews')
    op.drop_index(op.f('ix_candidate_interviews_candidate_id'), table_name='candidate_interviews')
    op.drop_table('candidate_interviews')
    op.drop_index(op.f('ix_candidate_submissions_submitted_by'), table_name='candidate_submissions')
    op.drop_index(op.f('ix_candidate_submissions_job_opportunity_id'), table_name='candidate_submissions')
    op.drop_index(op.f('ix_candidate_submissions_id'), table_name='candidate_submissions')
    op.drop_index(op.f('ix_candidate_submissions_client_id'), table_name='candidate_submissions')
    op.drop_index(op.f('ix_candidate_submissions_candidate_id'), table_name='candidate_submissions')
    op.drop_table('candidate_submissions')
    op.drop_index(op.f('ix_job_opportunities_title'), table_name='job_opportunities')
    op.drop_index(op.f('ix_job_opportunities_tenant_id'), table_name='job_opportunities')
    op.drop_index(op.f('ix_job_opportunities_id'), table_name='job_opportunities')
    op.drop_index(op.f('ix_job_opportunities_client_id'), table_name='job_opportunities')
    op.drop_index(op.f('ix_job_opportunities_client_contact_id'), table_name='job_opportunities')
    op.drop_index(op.f('ix_job_opportunities_assigned_recruiter_id'), table_name='job_opportunities')
    op.drop_table('job_opportunities')
    op.drop_index(op.f('ix_client_contacts_tenant_id'), table_name='client_contacts')
    op.drop_index(op.f('ix_client_contacts_id'), table_name='client_contacts')
    op.drop_index(op.f('ix_client_contacts_email'), table_name='client_contacts')
    op.drop_index(op.f('ix_client_contacts_client_id'), table_name='client_contacts')
    op.drop_table('client_contacts')
    op.drop_table('candidate_certifications')
    op.drop_table('candidate_bench_skills')
    op.drop_index(op.f('ix_tenants_name'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_id'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_domain'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_clients_tenant_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_sales_rep_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_id'), table_name='clients')
    op.drop_index(op.f('ix_clients_company_name'), table_name='clients')
    op.drop_index(op.f('ix_clients_account_manager_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_certifications_name'), table_name='certifications')
    op.drop_index(op.f('ix_certifications_id'), table_name='certifications')
    op.drop_table('certifications')
    op.drop_index(op.f('ix_candidate_bench_user_id'), table_name='candidate_bench')
    op.drop_index(op.f('ix_candidate_bench_tenant_id'), table_name='candidate_bench')
    op.drop_index(op.f('ix_candidate_bench_profile_manager_id'), table_name='candidate_bench')
    op.drop_index(op.f('ix_candidate_bench_id'), table_name='candidate_bench')
    op.drop_table('candidate_bench')
    # ### end Alembic commands ###